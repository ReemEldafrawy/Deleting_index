#include <iostream>
using namespace std;
class vector {

private:
	int* arr = nullptr;
	int size = 0;
	int capacity;
public:
	vector(int size) :
		size(size)
	{
		if (size < 0)
		{
			size = 1;
		}
		arr = new int[size];

	}
	~vector()
	{
		delete[] arr;
		arr = nullptr;
	}


	void set(int index, int new_value)
	{
		if (index < size && index >= 0)
		{
			arr[index] = new_value;
		}
	}
	void print()
	{
		for (int i = 0;i < size;i++)
		{
			cout << arr[i] << "  ";
		}
		cout << endl;
	}

	int pop(int index)
	{
		int num = arr[index];
		if (index >= 0 && index < size)
		{
			
			for (int i = index + 1;i < size;i++)
			{
				arr[i - 1] = arr[i];               //time complexity=o(size)
			}
		}
		--size;
		return num - 1;
	








	}
};


int main()
{
	int size;
	cout << "enter the size ,please\n";
	cin >> size;
	vector v(size);
	for (int i = 0;i < size;++i)
		v.set(i, i);
	v.print();
	int index;
	cout << "enter the index ,please\n";
	cin >> index;
	v.pop(index);
	v.print();
	cout << "deleted value:" << v.pop(index);

    
}
